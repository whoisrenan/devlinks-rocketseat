@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500&family=Playfair+Display:wght@400;500;600;700;800&display=swap");
/* Iniciando Background do projeto. */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root {
  --text-color: white;
  --bg-url: url(images/bg-desktop.jpg);
  --bg-url-mobile: url(images/bg-mobile.jpg);
  --stroke-color: rgba(255, 255, 255, 0.5);
  --surface-color: rgba(255, 255, 255, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(255, 255, 255, 0.2);
  --switch-bg-url: url(images/moon-stars.svg);
}
.light {
  --text-color: black;
  --bg-url: url(images/bg-desktop-light.jpg);
  --bg-url-mobile: url(images/bg-mobile-light.jpg);
  --stroke-color: rgba(0, 0, 0, 0.5);
  --surface-color: rgba(0, 0, 0, 0.05);
  --surface-color-hover: rgba(0, 0, 0, 0.02);
  --highlight-color: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(images/sun.svg);
}
body {
  /* background-image: url(images/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position: top center;
  background-size: cover; */

  /* Abaixo é a forma de agrupar todos as propriedades citadas acima em uma única propriedade. A ordem funciona da seguinte maneira: color, image, repeat, position/size. No size precisa da barra antes */
  background: var(--bg-url) no-repeat center/cover;
  background-attachment: fixed;
}
body * {
  font-family: "Inter", sans-serif;
  color: var(--text-color);
}
.container {
  width: 360px;
  margin: 56px auto 0px;
  padding: 0 24px;
}
#profile {
  padding: 24px;
}
#profile img {
  /* Para alinhar um elemento ao centro do container utilizando margin: auto, o elemento que é "inline" precisa ser transformado para "block", conforme abaixo. Uma outra forma de alinhar um elemento "inline" é usando o elemento pai, onde você declara a propriedade "text-align: center;" e, todos os elementos inline que são filhos serão centralizados.  */

  display: block;
  /* Display block pega toda a largura da linha disponível para o elemento selecionado.  */
  width: 112px;
  margin: auto;
}
#profile p {
  font-weight: 500;
  font-size: 1rem;
  line-height: 24px;
  text-align: center;
  margin-top: 8px;
}
#switch {
  position: relative;
  width: 64px;
  margin: 4px auto;
}
#switch button {
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 0;
  z-index: 1;
  transform: translateY(-50%);
  cursor: pointer;
}
.light #switch button {
  right: 0;
  left: initial;
}
#switch span {
  display: block;
  width: 64px;
  height: 24px;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border-radius: 9999px;
  cursor: pointer;
}
ul {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding: 24px 0;
}
ul li a {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 16px 24px;
  text-decoration: none;
  background: var(--surface-color);
  border: 1px solid var(--stroke-color);
  border-radius: 8px;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  font-weight: 500;
  transition: background 0.5s;
}
ul li a:hover {
  background: var(--surface-color-hover);
  border: 1.5px solid var(--text-color);
}
#social-links {
  display: flex;
  justify-content: center;
  padding: 24px 0;
  font-size: 24px;
}
#social-links a {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;
  border-radius: 50%;
  transition: background 0.2s;
}
#social-links a:hover {
  background: var(--highlight-color);
}
@media (max-width: 700px) {
  body {
    background: var(--bg-url-mobile) no-repeat top center/cover;
    background-attachment: fixed;
  }
}
@media (max-width: 360px) {
  .container {
    width: 320px;
  }
}
